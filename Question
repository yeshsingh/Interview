1. Can you tell me about yourself?

Good morning My name is Yesh Singh, and I am currently pursuing a Bachelor of Technology in Computer Science Engineering 
from VIT Bhopal University, with a CGPA of 8.67. 
My primary domain is web development, with MERN as my tech stack. In my academic journey I have worked on projects 
Medisync which is a healthcare management system specifically designed for VIT Bhopal University and its surrounding doctors 
and Algovisualizer, which is a web application for visualizing pathfinding algorithms like dijkstra, bfs,dfs and many more.
I am deeply passionate about competitive programming and actively practice data structure and algorithms in C++.
I have solved over 1300 coding problems across platforms like leetcode,
codechef codeforces. 
I hold the title of Knight on LeetCode, with a peak rating of 1881 on Leetcode and title of Pupil with a peak rating of 1282 
on Codeforces. 
I have also represented my college in the ACM ICPC Amritapuri and Mathura Regionals for two consecutive years securing an 
all india rank of 113 and 115. 
I achieved a rank of 308 in Round 2 of TCS Codevita 2023.
Apart from all this I have also done an internship at HummingBird pvt ltd where I was responsible for providing web solutions 
to clients

2. Can you tell in brief about your projects:-
MEDISYNC:-
Medisync is a healthcare management system specifically designed for VIT Bhopal University and its surrounding doctors. 
It connects students with local healthcare providers quickly and efficiently. 
Key features include a map for locating healthcare providers, appointment booking of doctors and a chatbot for quick first aid advice. //booking appointment
The tech stack used includes MERN (React for the frontend, Node.js for the backend, and MongoDB for the database), with Botpress for the chatbot and Google Maps API for location services

Algovisualizer:- 
Algovisualizer is a web application for visualizing algorithms which is helpful in path finding these algorithms include dfs, bfs, dijkstra and A*. 
Through algovisualizer we can also visulaize complex maze problems like rat in a maze. 
It helps the user visualize how complex algorithms works in real time making it easier for them to understand.

Both projects were my solo projects

3. Can you elaborate on your role and responsibilities in the Medisync project?
I build everything in MEDISYNC.

My role in ALgovisualizer:-
Algovisualizer was also my solo project so i build everything in that too. 


4. What were the key challenges you faced during the development of Medisync, and how did you address them?
One of the major challenges I faced while building Medisync was verifying whether the doctors registering on the platform were genuine. 
To address this, I collected essential information from the doctors, such as their name, age, and license ID. 
I then cross-checked this data with the India Medical Registry, where all the necessary details about registered doctors are available. 
This process helped me ensure that only legitimate doctors could access and use the platform. 


5. How did you approach the integration of Google Maps API in Medisync?
I used the @react-google-maps/api package to add Google Maps to Medisync. 
After getting a key to access Google Maps, I used the user's current location (latitude and longitude) to find nearby hospitals.
Using this data, I queried the API to find nearby hospitals. 
This is how I added the map feature.


6. Can you describe the technology stack used in Medisync and why you chose those technologies?// react vs angular   node vs other backends9rust,go    no sql vs sql


7. What performance optimizations did you implement in Medisync, and how did they impact the application?
Scalable:-Right now, Medisync is for VIT Bhopal University students, but I plan to expand it in the future. 
The goal is to make it available in rural areas where hospitals are far away, but local doctors are nearby so using my website, 
people can contact the local doctors listed on Medisync in case of emergencies.

Technical Scalability:- The technical scalabilty included caching to speed up data retrieval, load balancing to distribute traffic evenly across servers, 
auto-scaling to handle varying loads automatically, and queues to manage tasks efficiently. 

Automate:- Right now, the admin manually checks if doctors are legitimate by verifying their name, age, and license ID. 
However, I'm planning to automate this process by using an API key to automatically verify whether the doctor is legit or not, making the process more efficient.


8. How did you ensure data security and user privacy in Medisync?
To ensure data security and user privacy in Medisync, 
I used JWT (JSON Web Tokens) for secure authentication and encryption methods like bcrypt and SHA-256 to protect sensitive data.


9. Can you explain the architecture of the Medisync application?
The high-level design of my project is straightforward. It includes separate pages for doctors and users. 
The information for both doctors and users is stored in a database.

10. How did you approach the development of the Algovisualizer project?


11. What were the main features of Algovisualizer, and how did you implement them?
12. How did you handle real-time updates and visualization in the Algovisualizer project?
13. Can you discuss the state management strategy you used in Algovisualizer?
14. What were the key factors you considered when choosing the technologies for Algovisualizer?
15. How did you optimize the performance of Algovisualizer?
16. Can you describe a challenge you encountered in Algovisualizer and how you resolved it?
17. How did you approach debugging and testing in both Medisync and Algovisualizer?
18. What inspired you to get involved in competitive programming?
19. Can you tell us about your experience representing your college in ACM ICPC?
20. What strategies did you use to prepare for and succeed in ACM ICPC and other competitive programming contests?
21. How did participating in Google Kickstart and CodeJam contribute to your growth as a competitive programmer?
22. Can you discuss your approach to solving problems on LeetCode, Codeforces, and CodeChef?
23. How do you stay current with new developments and technologies in computer science?
24. What are your primary strengths and areas of improvement in coding and development?
25. Can you explain how you balance competitive programming with your academic responsibilities?
26. How do you handle pressure and time constraints during coding contests?
27. Can you provide an example of a complex problem you solved and the approach you took?
28. What are your long-term goals in the field of computer science and competitive programming?
29. How do you approach learning new programming languages or technologies?
30. Can you discuss any experience you have with collaborative projects or team-based programming?
31. What hobbies or interests do you pursue outside of programming, and how do they contribute to your personal growth?
